/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "sumator.v:29" *)
module adder(\a[0] , \a[1] , \a[2] , \a[3] , \a[4] , \a[5] , \y[0] , \y[1] , \y[2] , \y[3] , \y[4] , \y[5] , \s[0] , \s[1] , \s[2] , \s[3] , \s[4] , \s[5] , \s[6] );
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  (* src = "sumator.v:47|sumator.v:3" *)
  (* unused_bits = "0" *)
  wire \G1.g ;
  (* src = "sumator.v:47|sumator.v:5" *)
  wire \G1.h ;
  (* src = "sumator.v:47|sumator.v:2" *)
  wire \G1.x ;
  (* src = "sumator.v:47|sumator.v:2" *)
  wire \G1.y ;
  (* src = "sumator.v:48|sumator.v:2" *)
  wire \G2.x ;
  (* src = "sumator.v:48|sumator.v:2" *)
  wire \G2.y ;
  (* src = "sumator.v:49|sumator.v:2" *)
  wire \G3.x ;
  (* src = "sumator.v:49|sumator.v:2" *)
  wire \G3.y ;
  (* src = "sumator.v:50|sumator.v:2" *)
  wire \G4.x ;
  (* src = "sumator.v:50|sumator.v:2" *)
  wire \G4.y ;
  (* src = "sumator.v:51|sumator.v:2" *)
  wire \G5.x ;
  (* src = "sumator.v:51|sumator.v:2" *)
  wire \G5.y ;
  (* src = "sumator.v:52|sumator.v:2" *)
  wire \G6.x ;
  (* src = "sumator.v:52|sumator.v:2" *)
  wire \G6.y ;
  (* src = "sumator.v:38" *)
  (* unused_bits = "0" *)
  wire \G[0] ;
  (* src = "sumator.v:38" *)
  (* unused_bits = "0" *)
  wire \G[1] ;
  (* src = "sumator.v:38" *)
  (* unused_bits = "0" *)
  wire \G[2] ;
  (* src = "sumator.v:38" *)
  (* unused_bits = "0" *)
  wire \G[3] ;
  (* src = "sumator.v:38" *)
  (* unused_bits = "0" *)
  wire \G[4] ;
  (* src = "sumator.v:38" *)
  wire \G[5] ;
  (* src = "sumator.v:73|sumator.v:14" *)
  (* unused_bits = "0" *)
  wire \P1.Gij ;
  (* src = "sumator.v:73|sumator.v:13" *)
  (* unused_bits = "0" *)
  wire \P1.gj ;
  (* src = "sumator.v:78|sumator.v:14" *)
  (* unused_bits = "0" *)
  wire \P2.Gij ;
  (* src = "sumator.v:78|sumator.v:13" *)
  (* unused_bits = "0" *)
  wire \P2.gj ;
  (* src = "sumator.v:83|sumator.v:14" *)
  (* unused_bits = "0" *)
  wire \P3_1.Gij ;
  (* src = "sumator.v:83|sumator.v:13" *)
  (* unused_bits = "0" *)
  wire \P3_1.gj ;
  (* src = "sumator.v:87|sumator.v:14" *)
  (* unused_bits = "0" *)
  wire \P4.Gij ;
  (* src = "sumator.v:87|sumator.v:13" *)
  (* unused_bits = "0" *)
  wire \P4.gj ;
  (* src = "sumator.v:92|sumator.v:14" *)
  wire \P5_1.Gij ;
  (* src = "sumator.v:92|sumator.v:13" *)
  (* unused_bits = "0" *)
  wire \P5_1.gj ;
  (* src = "sumator.v:68|sumator.v:21" *)
  (* unused_bits = "0" *)
  wire \S1.G ;
  (* src = "sumator.v:68|sumator.v:22" *)
  wire \S1.s ;
  (* src = "sumator.v:75|sumator.v:21" *)
  (* unused_bits = "0" *)
  wire \S2.G ;
  (* src = "sumator.v:75|sumator.v:22" *)
  wire \S2.s ;
  (* src = "sumator.v:79|sumator.v:21" *)
  (* unused_bits = "0" *)
  wire \S3.G ;
  (* src = "sumator.v:79|sumator.v:22" *)
  wire \S3.s ;
  (* src = "sumator.v:84|sumator.v:21" *)
  (* unused_bits = "0" *)
  wire \S4.G ;
  (* src = "sumator.v:84|sumator.v:22" *)
  wire \S4.s ;
  (* src = "sumator.v:88|sumator.v:21" *)
  (* unused_bits = "0" *)
  wire \S5.G ;
  (* src = "sumator.v:88|sumator.v:22" *)
  wire \S5.s ;
  (* src = "sumator.v:31" *)
  input \a[0] ;
  (* src = "sumator.v:31" *)
  input \a[1] ;
  (* src = "sumator.v:31" *)
  input \a[2] ;
  (* src = "sumator.v:31" *)
  input \a[3] ;
  (* src = "sumator.v:31" *)
  input \a[4] ;
  (* src = "sumator.v:31" *)
  input \a[5] ;
  (* src = "sumator.v:37" *)
  (* unused_bits = "0" *)
  wire \g[0] ;
  (* src = "sumator.v:35" *)
  wire \h[0] ;
  (* src = "sumator.v:36" *)
  wire \p[0] ;
  (* src = "sumator.v:33" *)
  output \s[0] ;
  (* src = "sumator.v:33" *)
  output \s[1] ;
  (* src = "sumator.v:33" *)
  output \s[2] ;
  (* src = "sumator.v:33" *)
  output \s[3] ;
  (* src = "sumator.v:33" *)
  output \s[4] ;
  (* src = "sumator.v:33" *)
  output \s[5] ;
  (* src = "sumator.v:33" *)
  output \s[6] ;
  (* src = "sumator.v:32" *)
  input \y[0] ;
  (* src = "sumator.v:32" *)
  input \y[1] ;
  (* src = "sumator.v:32" *)
  input \y[2] ;
  (* src = "sumator.v:32" *)
  input \y[3] ;
  (* src = "sumator.v:32" *)
  input \y[4] ;
  (* src = "sumator.v:32" *)
  input \y[5] ;
  NOT _070_ (
    .A(\y[3] ),
    .Y(_000_)
  );
  NOT _071_ (
    .A(\a[3] ),
    .Y(_001_)
  );
  NOT _072_ (
    .A(\y[2] ),
    .Y(_002_)
  );
  NOT _073_ (
    .A(\a[2] ),
    .Y(_003_)
  );
  NOT _074_ (
    .A(\y[4] ),
    .Y(_004_)
  );
  NOT _075_ (
    .A(\a[4] ),
    .Y(_005_)
  );
  NOT _076_ (
    .A(\y[5] ),
    .Y(_006_)
  );
  NOT _077_ (
    .A(\a[5] ),
    .Y(_007_)
  );
  NOT _078_ (
    .A(\y[1] ),
    .Y(_008_)
  );
  NOT _079_ (
    .A(\a[1] ),
    .Y(_009_)
  );
  NOT _080_ (
    .A(\y[0] ),
    .Y(_010_)
  );
  NOT _081_ (
    .A(\a[0] ),
    .Y(_011_)
  );
  NOR _082_ (
    .A(\y[2] ),
    .B(\a[2] ),
    .Y(_012_)
  );
  NAND _083_ (
    .A(_002_),
    .B(_003_),
    .Y(_013_)
  );
  NOR _084_ (
    .A(_002_),
    .B(_003_),
    .Y(_014_)
  );
  NAND _085_ (
    .A(\y[2] ),
    .B(\a[2] ),
    .Y(_015_)
  );
  NOR _086_ (
    .A(_012_),
    .B(_014_),
    .Y(_016_)
  );
  NAND _087_ (
    .A(_013_),
    .B(_015_),
    .Y(_017_)
  );
  NOR _088_ (
    .A(_008_),
    .B(_009_),
    .Y(_018_)
  );
  NAND _089_ (
    .A(\y[1] ),
    .B(\a[1] ),
    .Y(_019_)
  );
  NOR _090_ (
    .A(\y[1] ),
    .B(\a[1] ),
    .Y(_020_)
  );
  NOT _091_ (
    .A(_020_),
    .Y(_021_)
  );
  NOR _092_ (
    .A(_010_),
    .B(_011_),
    .Y(_022_)
  );
  NAND _093_ (
    .A(\y[0] ),
    .B(\a[0] ),
    .Y(_023_)
  );
  NOR _094_ (
    .A(_020_),
    .B(_023_),
    .Y(_024_)
  );
  NOT _095_ (
    .A(_024_),
    .Y(_025_)
  );
  NOR _096_ (
    .A(_018_),
    .B(_024_),
    .Y(_026_)
  );
  NAND _097_ (
    .A(_019_),
    .B(_025_),
    .Y(_027_)
  );
  NAND _098_ (
    .A(_017_),
    .B(_027_),
    .Y(_028_)
  );
  NAND _099_ (
    .A(_016_),
    .B(_026_),
    .Y(_029_)
  );
  NAND _100_ (
    .A(_028_),
    .B(_029_),
    .Y(\s[2] )
  );
  NOR _101_ (
    .A(_000_),
    .B(_001_),
    .Y(_030_)
  );
  NAND _102_ (
    .A(\y[3] ),
    .B(\a[3] ),
    .Y(_031_)
  );
  NOR _103_ (
    .A(\y[3] ),
    .B(\a[3] ),
    .Y(_032_)
  );
  NAND _104_ (
    .A(_000_),
    .B(_001_),
    .Y(_033_)
  );
  NOR _105_ (
    .A(_030_),
    .B(_032_),
    .Y(_034_)
  );
  NOR _106_ (
    .A(_012_),
    .B(_026_),
    .Y(_035_)
  );
  NAND _107_ (
    .A(_013_),
    .B(_027_),
    .Y(_036_)
  );
  NOR _108_ (
    .A(_014_),
    .B(_035_),
    .Y(_037_)
  );
  NAND _109_ (
    .A(_015_),
    .B(_036_),
    .Y(_038_)
  );
  NOR _110_ (
    .A(_034_),
    .B(_038_),
    .Y(_039_)
  );
  NOR _111_ (
    .A(_032_),
    .B(_037_),
    .Y(_040_)
  );
  NAND _112_ (
    .A(_033_),
    .B(_038_),
    .Y(_041_)
  );
  NOR _113_ (
    .A(_030_),
    .B(_041_),
    .Y(_042_)
  );
  NOR _114_ (
    .A(_039_),
    .B(_042_),
    .Y(\s[3] )
  );
  NOR _115_ (
    .A(_004_),
    .B(_005_),
    .Y(_043_)
  );
  NAND _116_ (
    .A(\y[4] ),
    .B(\a[4] ),
    .Y(_044_)
  );
  NOR _117_ (
    .A(\y[4] ),
    .B(\a[4] ),
    .Y(_045_)
  );
  NAND _118_ (
    .A(_004_),
    .B(_005_),
    .Y(_046_)
  );
  NOR _119_ (
    .A(_043_),
    .B(_045_),
    .Y(_047_)
  );
  NOR _120_ (
    .A(_030_),
    .B(_040_),
    .Y(_048_)
  );
  NAND _121_ (
    .A(_031_),
    .B(_041_),
    .Y(_049_)
  );
  NOR _122_ (
    .A(_047_),
    .B(_049_),
    .Y(_050_)
  );
  NOR _123_ (
    .A(_045_),
    .B(_048_),
    .Y(_051_)
  );
  NAND _124_ (
    .A(_046_),
    .B(_049_),
    .Y(_052_)
  );
  NOR _125_ (
    .A(_043_),
    .B(_052_),
    .Y(_053_)
  );
  NOR _126_ (
    .A(_050_),
    .B(_053_),
    .Y(\s[4] )
  );
  NOR _127_ (
    .A(\y[5] ),
    .B(\a[5] ),
    .Y(_054_)
  );
  NAND _128_ (
    .A(_006_),
    .B(_007_),
    .Y(_055_)
  );
  NAND _129_ (
    .A(\y[5] ),
    .B(\a[5] ),
    .Y(_056_)
  );
  NOT _130_ (
    .A(_056_),
    .Y(_057_)
  );
  NOR _131_ (
    .A(_054_),
    .B(_057_),
    .Y(_058_)
  );
  NAND _132_ (
    .A(_055_),
    .B(_056_),
    .Y(_059_)
  );
  NOR _133_ (
    .A(_043_),
    .B(_051_),
    .Y(_060_)
  );
  NAND _134_ (
    .A(_044_),
    .B(_052_),
    .Y(_061_)
  );
  NOR _135_ (
    .A(_058_),
    .B(_061_),
    .Y(_062_)
  );
  NOR _136_ (
    .A(_059_),
    .B(_060_),
    .Y(_063_)
  );
  NOR _137_ (
    .A(_062_),
    .B(_063_),
    .Y(\s[5] )
  );
  NAND _138_ (
    .A(_055_),
    .B(_061_),
    .Y(_064_)
  );
  NAND _139_ (
    .A(_056_),
    .B(_064_),
    .Y(\s[6] )
  );
  NOR _140_ (
    .A(_018_),
    .B(_020_),
    .Y(_065_)
  );
  NAND _141_ (
    .A(_019_),
    .B(_021_),
    .Y(_066_)
  );
  NOR _142_ (
    .A(_022_),
    .B(_065_),
    .Y(_067_)
  );
  NOR _143_ (
    .A(_023_),
    .B(_066_),
    .Y(_068_)
  );
  NOR _144_ (
    .A(_067_),
    .B(_068_),
    .Y(\s[1] )
  );
  NOR _145_ (
    .A(\y[0] ),
    .B(\a[0] ),
    .Y(_069_)
  );
  NOR _146_ (
    .A(_022_),
    .B(_069_),
    .Y(\s[0] )
  );
  assign \h[0]  = \s[0] ;
  assign \p[0]  = 1'hx;
  assign \g[0]  = \G1.g ;
  assign \G[5]  = \s[6] ;
  assign \G1.h  = \s[0] ;
  assign \G1.x  = \a[0] ;
  assign \G1.y  = \y[0] ;
  assign \G2.x  = \a[1] ;
  assign \G2.y  = \y[1] ;
  assign \G3.x  = \a[2] ;
  assign \G3.y  = \y[2] ;
  assign \G4.x  = \a[3] ;
  assign \G4.y  = \y[3] ;
  assign \G5.x  = \a[4] ;
  assign \G5.y  = \y[4] ;
  assign \G6.x  = \a[5] ;
  assign \G6.y  = \y[5] ;
  assign \P1.Gij  = \G[1] ;
  assign \P1.gj  = \G1.g ;
  assign \P2.Gij  = \G[2] ;
  assign \P2.gj  = \G[1] ;
  assign \P3_1.Gij  = \G[3] ;
  assign \P3_1.gj  = \G[1] ;
  assign \P4.Gij  = \G[4] ;
  assign \P4.gj  = \G[3] ;
  assign \P5_1.Gij  = \s[6] ;
  assign \P5_1.gj  = \G[3] ;
  assign \S1.G  = \G1.g ;
  assign \S1.s  = \s[1] ;
  assign \S2.G  = \G[1] ;
  assign \S2.s  = \s[2] ;
  assign \S3.G  = \G[2] ;
  assign \S3.s  = \s[3] ;
  assign \S4.G  = \G[3] ;
  assign \S4.s  = \s[4] ;
  assign \S5.G  = \G[4] ;
  assign \S5.s  = \s[5] ;
  assign \G[0]  = \G1.g ;
endmodule
